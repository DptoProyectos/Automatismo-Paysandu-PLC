(*2*)
(* Network 0 *)
(*YCH;VER:4.0.4;UMOD:100;MOD:102;UFREQ:100;PS:0.00;QS:0.00;HC:3.70;VF:0.00;VC:0.00;VT:0.00;ST:20544*)
LD    TRUE
ST   %BR0.0
(* Network 1 *)
(*YCH1- Solo ejecuto operaciones de tx cuando hay un flanco de subida2- Fuerzo el finalizador de las tareas que se ejecutan luego de finalizada la receción de datos.*)
LD    tx
R_TRIG
MOVE    B#0, serial_buffSize
ST   %M104.4
R    %M104.5
R    tx
(* Network 2 *)
(*YCHMuevo la dirección del buffer a una variable global para hacer uso mas racional de la memoria tipo L*)
LD    %M104.4
MOVE    buffAddr, serial_buffAdd
(* Network 3 *)
(*YCHLimpio el buffer para que pueda ser utilizado en la transmision de nuevos datos*)
LD    %M104.4
FILL  B#0, serial_buffData, B#255
(* Network 4 *)
(*YCHCONFIGURACION DE TRANMISIÓN1-Seteo el tiempo de transmision efectiva a 10ms*)
LD    %M104.4
MOVE    10, %SMW290
(* Network 5 *)
(*YCHCONFIGURACION DE RECEPCION1-OJO: La cantidad de bytes de recepcion sera dinamica para poder descartar el header http2-Seteo el tiempo de recepcion efectiva a 500ms*)
LD    %M104.4
MOVE    1000, %SMW292
(* Network 6 *)
(*YCHCONFIGURACION DEL PUERTO DE COMUNICACIONES0-> Reservado1-> Enable interrupciones2-> Obedecer tiempo de recepcion en SMW1923-> Reservado4-> Obedecer tiempo de transmisión en SMW1905-> Uso de caracter de Stop6-> Uso de caracter de Start7-> Habilitar RCV function*)
LD    %M104.4
MOVE    B#2#10010110, %SMB287
(* Network 7 *)
(*YCHPREPARACION1- Se crea un puntero que apunte al buffer de tx2- Se desplaza el puntero al inicio del buffer2- Se crea una interrupcion para el fin de la transmision*)
LD    %M104.4
AND(
LD    TRUE
MOVE    &VB0, %VD500
OR(
LD    TRUE
I_TO_DI    buffAddr, dint0
ADD    dint0, %VD500
)
OR(
LD    TRUE
ATCH    INT00, 34
)
)
(* Network 8 *)
(*YCH##################################################################################################;TYPE:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, B#59, B#84, B#89, B#80, B#69, B#58
(* Network 9 *)
(*YCH##################################################################################################PLCPAYArmo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, B#80, B#76, B#67, B#80, B#65, B#89
(* Network 10 *)
(*YCH##################################################################################################;VER:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, B#59, B#86, B#69, B#82, B#58, B#0
(* Network 11 *)
(*4.0.4Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, B#52, B#46, B#48, B#46, B#52, B#0
(* Network 12 *)
(*YCH##################################################################################################;UMOD:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, B#59, B#85, B#77, B#79, B#68, B#58
(* Network 13 *)
(*YCHM_ModeUpdate -> XXXXXXXXSe toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
AND(
LD    TRUE
MOVE    M_ModeUpdate, int0
ADD    0, int0
OR(
LD    TRUE
MOVE    B#2#00000000, byte0
)
)
I_TO_A  int0, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 7, tmpAddr
(* Network 14 *)
(*YCH##################################################################################################;MOD:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, B#59, B#77, B#79, B#68, B#0, B#58
(* Network 15 *)
(*YCHM_Mode -> XXXXXXXXSe toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
AND(
LD    TRUE
MOVE    M_Mode, int0
ADD    0, int0
OR(
LD    TRUE
MOVE    B#2#00000000, byte0
)
)
I_TO_A  int0, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 7, tmpAddr
(* Network 16 *)
(*YCH##################################################################################################;UFREQArmo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, B#59, B#85, B#70, B#82, B#69, B#81
(* Network 17 *)
(*YCH:Armo la etiqueta y la coloco en el buffer txNota: esta linea lader solo coloca los dos putos finales de la etiqueta UFREQ ya que por el largo de la misma no se pudo cubrir todo en la linea anterior*)
LD    %M104.4
CAL    SBR24    TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, B#58, B#0, B#0, B#0, B#0, B#0
(* Network 18 *)
(*YCHM_FreqUpdate -> XXXXXXXXSe toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
AND(
LD    TRUE
MOVE    M_FreqUpdate, int0
ADD    0, int0
OR(
LD    TRUE
MOVE    B#2#00000000, byte0
)
)
I_TO_A  int0, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 7, tmpAddr
(* Network 19 *)
(*YCH##################################################################################################;PS:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, B#59, B#80, B#83, B#58, B#0, B#0
(* Network 20 *)
(*YCHM_PresionSellos -> -123456.12Se toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
MOVE    B#2#11110010, byte0
R_TO_A  M_PresionSellos, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 14, tmpAddr
(* Network 21 *)
(*YCH##################################################################################################;QS:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, B#59, B#81, B#83, B#58, B#0, B#0
(* Network 22 *)
(*YCHM_CaudalSellos -> -123456.12Se toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
MOVE    B#2#11110010, byte0
R_TO_A  M_CaudalSellos, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 14, tmpAddr
(* Network 23 *)
(*YCH##################################################################################################;HC:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, B#59, B#72, B#67, B#58, B#0, B#0
(* Network 24 *)
(*YCHM_AlturaAgua -> -123456.12Se toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
MOVE    B#2#11110010, byte0
R_TO_A  M_AlturaAgua, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 14, tmpAddr
(* Network 25 *)
(*YCH##################################################################################################;VF:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, B#59, B#86, B#70, B#58, B#0, B#0
(* Network 26 *)
(*YCHM_VarFreq -> -123456.12Se toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
MOVE    B#2#11110010, byte0
R_TO_A  M_VarFreq, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 14, tmpAddr
(* Network 27 *)
(*YCH##################################################################################################;VC:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, B#59, B#86, B#67, B#58, B#0, B#0
(* Network 28 *)
(*YCHM_VarCurrent -> -123456.12Se toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
MOVE    B#2#11110010, byte0
R_TO_A  M_VarCurrent, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 14, tmpAddr
(* Network 29 *)
(*YCH##################################################################################################;VT:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, B#59, B#86, B#84, B#58, B#0, B#0
(* Network 30 *)
(*YCHM_VarTemp -> -123456.12Se toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
MOVE    B#2#11110010, byte0
R_TO_A  M_VarTemp, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 14, tmpAddr
(* Network 31 *)
(*YCH##################################################################################################;ST:Armo la etiqueta y la coloco en el buffer tx*)
LD    %M104.4
CAL    SBR24    TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, B#59, B#83, B#84, B#58, B#0, B#0
(* Network 32 *)
(*YCHStates  -> XXXXXXXXSe toma el dato y se convierte a ASCIII bajo cierto formatoSe coloca en un espacio temporal el resultado de la conversiónSe limpian los caracteres creados de todos los espacios bacios que contenga y se coloca en el buffer tx*)
LD    %M104.4
AND(
LD    TRUE
MOVE    States, int0
ADD    0, int0
OR(
LD    TRUE
MOVE    B#2#00000000, byte0
)
)
I_TO_A  int0, serial_FirstTmpD, byte0
CAL    SBR23    DI#0, 7, tmpAddr
(* Network 33 *)
(*YCH1-Transmito los datos que se encuentran en el buffer*)
LD    %M104.4
XMT    serial_buffSize, 2
